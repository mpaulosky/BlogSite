@page "/Account/ForgotPassword"
@using System.ComponentModel.DataAnnotations
@using System.Text
@using System.Text.Encodings.Web
@using Microsoft.AspNetCore.WebUtilities


@inject UserManager<PgBlogSiteUser> UserManager
@inject IEmailSender<PgBlogSiteUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Forgot your password?</PageTitle>

<div class="max-w-md mx-auto py-8">
	<h1 class="text-3xl font-bold text-gray-900 dark:text-white mb-2">Forgot your password?</h1>
	<p class="text-gray-600 dark:text-gray-400 mb-6">Enter your email address and we'll send you a reset link</p>

	<div class="bg-white dark:bg-gray-800 rounded-xl shadow-lg p-8 border border-gray-200 dark:border-gray-700">
		<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
			<DataAnnotationsValidator/>
			<ValidationSummary
				class="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 text-red-800 dark:text-red-200 rounded-lg p-4 mb-4"
				role="alert"/>

			<div class="mb-6">
				<label for="Input.Email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email</label>
				<InputText @bind-Value="Input.Email" id="Input.Email"
									 class="w-full px-4 py-3 rounded-lg border border-gray-300 dark:border-gray-600 
                                  bg-white dark:bg-gray-700 text-gray-900 dark:text-white
                                  focus:ring-2 focus:ring-indigo-500 dark:focus:ring-indigo-400 focus:border-transparent
                                  placeholder-gray-400 dark:placeholder-gray-500 transition-all duration-200"
									 autocomplete="username" aria-required="true" placeholder="name@example.com"/>
				<ValidationMessage For="() => Input.Email" class="text-red-600 dark:text-red-400 text-sm mt-1"/>
			</div>
			<button type="submit"
							class="w-full px-6 py-3 rounded-lg font-medium
                           bg-gradient-to-r from-indigo-600 to-purple-600 
                           hover:from-indigo-700 hover:to-purple-700
                           text-white shadow-md hover:shadow-lg
                           transform hover:scale-[1.02] active:scale-[0.98]
                           transition-all duration-200">
				Reset password
			</button>
		</EditForm>
	</div>
</div>

@code {

	[SupplyParameterFromForm] private InputModel Input { get; set; } = new();

	private async Task OnValidSubmitAsync()
	{
		var user = await UserManager.FindByEmailAsync(Input.Email);

		if (user is null || !await UserManager.IsEmailConfirmedAsync(user))
		{
			// Don't reveal that the user does not exist or is not confirmed
			RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
		}

		// For more information on how to enable account confirmation and password reset please
		// visit https://go.microsoft.com/fwlink/?LinkID=532713
		var code = await UserManager.GeneratePasswordResetTokenAsync(user);
		code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));

		var callbackUrl = NavigationManager.GetUriWithQueryParameters(
			NavigationManager.ToAbsoluteUri("Account/ResetPassword").AbsoluteUri,
			new Dictionary<string, object?> { ["code"] = code });

		await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

		RedirectManager.RedirectTo("Account/ForgotPasswordConfirmation");
	}

	private sealed class InputModel
	{

		[Required][EmailAddress] public string Email { get; set; } = "";

	}

}